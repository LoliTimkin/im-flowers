{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/auth/auth-forward.guard.ts","./src/app/core/auth/auth.guard.ts","./src/app/core/auth/auth.interceptor.ts","./src/app/core/auth/auth.service.ts","./src/app/shared/ utils/active-params.util.ts","./src/app/shared/components/category-filter/category-filter.component.ts","./src/app/shared/components/category-filter/category-filter.component.html","./src/app/shared/components/count-selector/count-selector.component.ts","./src/app/shared/components/count-selector/count-selector.component.html","./src/app/shared/components/product-card/product-card.component.ts","./src/app/shared/components/product-card/product-card.component.html","./src/app/shared/directives/password-repeat.directive.ts","./src/app/shared/layout/footer/footer.component.ts","./src/app/shared/layout/footer/footer.component.html","./src/app/shared/layout/header/header.component.ts","./src/app/shared/layout/header/header.component.html","./src/app/shared/layout/layout.component.ts","./src/app/shared/layout/layout.component.html","./src/app/shared/services/cart.service.ts","./src/app/shared/services/category.service.ts","./src/app/shared/services/product.service.ts","./src/app/shared/shared.module.ts","./src/app/views/main/main.component.ts","./src/app/views/main/main.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {LayoutComponent} from \"./shared/layout/layout.component\";\nimport {MainComponent} from \"./views/main/main.component\";\nimport {AuthForwardGuard} from \"./core/auth/auth-forward.guard\";\nimport {AuthGuard} from \"./core/auth/auth.guard\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: LayoutComponent,\n    children: [\n      {path: \"\", component: MainComponent},\n      {path: \"\", loadChildren: () => import('./views/user/user.module').then(m => m.UserModule), canActivate: [AuthForwardGuard]},\n      {path: \"\", loadChildren: () => import('./views/product/product.module').then(m => m.ProductModule)},\n      {path: \"\", loadChildren: () => import('./views/order/order.module').then(m => m.OrderModule)},\n      {path: \"\", loadChildren: () => import('./views/personal/personal.module').then(m => m.PersonalModule), canActivate: [AuthGuard]}\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LayoutComponent } from './shared/layout/layout.component';\nimport { FooterComponent } from './shared/layout/footer/footer.component';\nimport { HeaderComponent } from './shared/layout/header/header.component';\nimport { MainComponent } from './views/main/main.component';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MAT_SNACK_BAR_DEFAULT_OPTIONS, MatSnackBarModule} from \"@angular/material/snack-bar\";\nimport {MatMenuModule} from \"@angular/material/menu\";\nimport {SharedModule} from \"./shared/shared.module\";\nimport {CarouselModule} from \"ngx-owl-carousel-o\";\nimport {AuthInterceptor} from \"./core/auth/auth.interceptor\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LayoutComponent,\n    FooterComponent,\n    HeaderComponent,\n    MainComponent\n  ],\n  imports: [\n    BrowserModule,\n    SharedModule,\n    CarouselModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MatSnackBarModule,\n    BrowserAnimationsModule,\n    MatMenuModule\n  ],\n  providers: [\n    {provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: {duration: 2500}},\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from \"./auth.service\";\nimport {Location} from \"@angular/common\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthForwardGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private location: Location) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.authService.getIsLoggedIn()) {\n      this.location.back()\n      return false;\n    }\n    return true;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from \"./auth.service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private _snackBar: MatSnackBar) {\n\n  }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const isLoggedIn = this.authService.getIsLoggedIn();\n    if(!isLoggedIn) {\n      this._snackBar.open('Для доступа необходимо авторизоваться');\n    }\n    return isLoggedIn;\n  }\n\n}\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\nimport {catchError, Observable, switchMap, throwError} from \"rxjs\";\nimport {Injectable} from \"@angular/core\";\nimport {AuthService} from \"./auth.service\";\nimport {DefaultResponseType} from \"../../../types/default-response.type\";\nimport {LoginResponseType} from \"../../../types/login-response.type\";\nimport {Router} from \"@angular/router\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService,\n              private router: Router) {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const token = this.authService.getTokens();\n    if (token && token.accessToken) {\n      const authReq = req.clone({\n        headers: req.headers.set('x-access-token', token.accessToken)\n      })\n\n      return next.handle(authReq)\n        .pipe(\n          catchError((error) => {\n            if (error.status === 401 && !authReq.url.includes(\"/login\") && !authReq.url.includes(\"/refresh\")) {\n              return this.handle401Error(authReq, next)\n            }\n            return throwError(() => error)\n          })\n        )\n    }\n\n    return next.handle(req)\n  }\n\n  handle401Error(req: HttpRequest<any>, next: HttpHandler) {\n    return this.authService.refresh()\n      .pipe(\n        switchMap((result: DefaultResponseType | LoginResponseType) => {\n          let error = '';\n          if ((result as DefaultResponseType).error !== undefined) {\n            error = (result as DefaultResponseType).message\n          }\n          const refreshResult = result as LoginResponseType;\n          if (!refreshResult.accessToken || !refreshResult.refreshToken || !refreshResult.userId) {\n            error = 'ошибка авторизации'\n          }\n\n          if (error) {\n            return throwError(() => new Error(error))\n          }\n\n          this.authService.setTokens(refreshResult.accessToken, refreshResult.refreshToken);\n\n          const authReq = req.clone({\n            headers: req.headers.set('x-access-token', refreshResult.accessToken)\n          })\n\n          return next.handle(authReq)\n        }),\n        catchError((error) => {\n          this.authService.removeTokens()\n          this.router.navigate(['/']);\n          return throwError(() => error)\n        })\n      )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable, Subject, throwError} from \"rxjs\";\nimport {DefaultResponseType} from \"../../../types/default-response.type\";\nimport {LoginResponseType} from \"../../../types/login-response.type\";\nimport {environment} from \"../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  public accessTokenKey: string = \"accessToken\";\n  public refreshTokenKey: string = \"refreshToken\";\n  public userIdKey: string = \"userId\";\n\n  public isLogged$: Subject<boolean> = new Subject<boolean>();\n  private isLogged: boolean = false;\n\n  constructor(private http: HttpClient) {\n     this.isLogged = !!localStorage.getItem(this.accessTokenKey)\n  }\n\n  login(email: string, password: string, rememberMe: boolean): Observable<DefaultResponseType | LoginResponseType> {\n    return this.http.post<DefaultResponseType | LoginResponseType>(environment.api + 'login', {\n      email, password, rememberMe\n    })\n  }\n\n  signup(email: string, password: string, passwordRepeat: string): Observable<DefaultResponseType | LoginResponseType> {\n    return this.http.post<DefaultResponseType | LoginResponseType>(environment.api + 'signup', {\n      email, password, passwordRepeat\n    })\n  }\n\n  logout(): Observable<DefaultResponseType>  {\n    const tokens = this.getTokens();\n    if(tokens && tokens.refreshToken) {\n      return this.http.post<DefaultResponseType>(environment.api + 'logout', {\n        refreshToken: tokens.refreshToken\n      })\n    }\n    throw throwError(() => {\n      \"Can't find token\"\n    })\n\n  }\n\n  refresh(): Observable<DefaultResponseType | LoginResponseType> {\n    const tokens = this.getTokens();\n    if(tokens && tokens.refreshToken) {\n      return this.http.post<DefaultResponseType | LoginResponseType>(environment.api + 'refresh', {\n        refreshToken: tokens.refreshToken\n      })\n    }\n    throw throwError(() => 'Can not use token' )\n  }\n\n  getIsLoggedIn() {\n    return this.isLogged;\n  }\n\n  public setTokens(accessToken: string, refreshToken: string ): void {\n    localStorage.setItem(this.accessTokenKey, accessToken);\n    localStorage.setItem(this.refreshTokenKey, refreshToken);\n    this.isLogged = true;\n    this.isLogged$.next(true);\n  }\n\n  public removeTokens(): void {\n    localStorage.removeItem(this.accessTokenKey);\n    localStorage.removeItem(this.refreshTokenKey);\n    this.isLogged = false;\n    this.isLogged$.next(false);\n  }\n\n  public getTokens(): {accessToken: string | null, refreshToken: string | null }  {\n      return {\n        accessToken: localStorage.getItem(this.accessTokenKey),\n        refreshToken: localStorage.getItem(this.refreshTokenKey),\n      }\n  }\n\n  get userId(): null | string {\n    return localStorage.getItem(this.userIdKey);\n  }\n\n  set userId(id: string | null){\n    if (id) {\n      localStorage.setItem(this.userIdKey, id);\n    } else {\n  localStorage.removeItem(this.userIdKey);\n    }\n  }\n\n\n\n\n}\n","import {Params} from \"@angular/router\";\nimport {ActiveParamsType} from \"../../../types/active-params-type\";\n\nexport class ActiveParamsUtil {\n  static processParams(params: Params): ActiveParamsType {\n    const activeParams: ActiveParamsType = {types: []}\n    if (params.hasOwnProperty('types')) {\n      activeParams.types = Array.isArray(params['types'])? params['types']: [params['types']]\n    }\n    if (params.hasOwnProperty('heightTo'))\n      activeParams.heightTo = params['heightTo']\n    if (params.hasOwnProperty('heightFrom'))\n      activeParams.heightFrom = params['heightFrom']\n    if (params.hasOwnProperty('diameterTo'))\n      activeParams.diameterTo = params['diameterTo']\n    if (params.hasOwnProperty('diameterFrom'))\n      activeParams.diameterFrom = params['diameterFrom']\n    if (params.hasOwnProperty('sort'))\n      activeParams.sort = params['sort']\n    if (params.hasOwnProperty('page'))\n      activeParams.page = +params['page']\n\n    return activeParams;\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {CategoryWithTypeType} from \"../../../../types/category-with-type\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {ActiveParamsType} from \"../../../../types/active-params-type\";\nimport {ActiveParamsUtil} from \"../../ utils/active-params.util\";\n\n@Component({\n  selector: 'category-filter',\n  templateUrl: './category-filter.component.html',\n  styleUrls: ['./category-filter.component.scss']\n})\nexport class CategoryFilterComponent implements OnInit {\n\n  @Input() categoryWithTypes: CategoryWithTypeType | null = null;\n  @Input() type: string | null = null;\n\n  open = false;\n  activeParams: ActiveParamsType = {types:[]}\n\n  from: number | null = null;\n  to: number | null = null;\n\n  get title(): string {\n    if(this.categoryWithTypes) {\n      return this.categoryWithTypes.name\n\n    } else if (this.type) {\n      if(this.type === 'height') {\n        return 'Высота'\n      } else if (this.type === 'diameter') {\n        return 'Диаметр'\n      }\n    }\n    return ''\n  }\n\n  constructor(private router: Router, private activatedRoute: ActivatedRoute) {\n\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe(params => {\n\n      this.activeParams = ActiveParamsUtil.processParams(params);\n\n      if(this.type) {\n        if(this.type === 'height') {\n          this.open = !!(this.activeParams.heightFrom || this.activeParams.heightTo);\n          this.from = this.activeParams.heightFrom ? +this.activeParams.heightFrom : null\n          this.to = this.activeParams.heightTo ? +this.activeParams.heightTo : null\n        } else if(this.type === 'diameter') {\n          this.open = !!(this.activeParams.diameterFrom || this.activeParams.diameterTo);\n          this.from = this.activeParams.diameterFrom ? +this.activeParams.diameterFrom : null\n          this.to = this.activeParams.diameterTo ? +this.activeParams.diameterTo : null\n        }\n      } else {\n        if(params['types']) {\n          this.activeParams.types = Array.isArray(params['types']) ? params['types'] : [params['types']];\n        }  else {\n          this.activeParams.types = [];\n        }\n        if (this.categoryWithTypes && this.categoryWithTypes.types && this.categoryWithTypes.types.length > 0\n        && this.categoryWithTypes.types.some(type => this.activeParams.types.find(item => type.url === item))) {\n          this.open = true;\n        }\n      }\n    })\n  }\n\n  toogle(): void {\n      this.open = !this.open\n  }\n\n  updateFilterParam(url: string, checked: boolean): void {\n\n    if(this.activeParams.types && this.activeParams.types.length > 0) {\n      const existingTypeInParams = this.activeParams.types.find(item => item === url)\n      if(existingTypeInParams && !checked) {\n        this.activeParams.types = this.activeParams.types.filter(item => item !== url)\n      } else if(!existingTypeInParams && checked) {\n        //this.activeParams.types.push(url)\n        this.activeParams.types = [...this.activeParams.types, url]\n      }\n\n    } else if(checked) {\n      this.activeParams.types = [url]\n    }\n\n    this.activeParams.page = 1;\n    this.router.navigate([\"/catalog\"], {\n      queryParams: this.activeParams\n    })\n  }\n\n  updateFilterParamFromTo(param: string, value: string): void {\n    if(param === 'heightTo' || param === 'diameterTo' || param === 'heightFrom' || param === 'diameterFrom') {\n      if(this.activeParams[param] && !value ) {\n        delete this.activeParams[param];\n      } else {\n        this.activeParams[param] = value;\n      }\n    }\n    this.activeParams.page = 1;\n    this.router.navigate([\"/catalog\"], {\n      queryParams: this.activeParams\n    })\n  }\n}\n","<div class=\"catalog-filter\" [class.open]=\"open\">\n  <div class=\"catalog-filter-head\" (click)=\"toogle()\">\n    <span>{{ title }}</span>\n    <svg *ngIf=\"open\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M9.99974 5.99997C10.5831 5.99997 11.1664 6.22497 11.6081 6.66663L17.0414 12.1C17.2831 12.3416 17.2831 12.7416 17.0414 12.9833C16.7997 13.225 16.3997 13.225 16.1581 12.9833L10.7247 7.54997C10.3247 7.14997 9.67474 7.14997 9.27474 7.54997L3.84141 12.9833C3.59974 13.225 3.19974 13.225 2.95807 12.9833C2.71641 12.7416 2.71641 12.3416 2.95807 12.1L8.39141 6.66663C8.83307 6.22497 9.41641 5.99997 9.99974 5.99997Z\" fill=\"#2C2C2C\"/>\n    </svg>\n    <svg *ngIf=\"!open\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M10.0003 14C9.41693 14 8.83359 13.775 8.39193 13.3334L2.95859 7.90003C2.71693 7.65837 2.71693 7.25837 2.95859 7.0167C3.20026 6.77503 3.60026 6.77503 3.84193 7.0167L9.27526 12.45C9.67526 12.85 10.3253 12.85 10.7253 12.45L16.1586 7.0167C16.4003 6.77503 16.8003 6.77503 17.0419 7.0167C17.2836 7.25837 17.2836 7.65837 17.0419 7.90003L11.6086 13.3334C11.1669 13.775 10.5836 14 10.0003 14Z\" fill=\"#2C2C2C\"/>\n    </svg>\n  </div>\n  <div class=\"catalog-filter-body\">\n    <label class=\"catalog-filter-checkbox\" *ngFor=\"let type of categoryWithTypes?.types\">\n      <input type=\"checkbox\" #input\n             [checked]=\"activeParams.types.includes(type.url)\"\n             (change)=\"updateFilterParam(type.url, input.checked)\">\n      <span>{{ type.name }}</span>\n    </label>\n\n    <div class=\"catalog-filter-from-to\" *ngIf=\"type\">\n      <span>от</span>\n      <input type=\"number\" step=\"1\" min=\"0\" [ngModel]=\"from\" (ngModelChange)=\"updateFilterParamFromTo(type + 'From', $event)\" class=\"small-input\">\n      <span>до</span>\n      <input type=\"number\" step=\"1\" min=\"0\" [ngModel]=\"to\" (ngModelChange)=\"updateFilterParamFromTo(type + 'To', $event)\" class=\"small-input\">\n      <span>см</span>\n    </div>\n  </div>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'count-selector',\n  templateUrl: './count-selector.component.html',\n  styleUrls: ['./count-selector.component.scss']\n})\nexport class CountSelectorComponent implements OnInit {\n\n  @Output() onCountChange: EventEmitter<number> = new EventEmitter<number>();\n  @Input() count: number = 1;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  countChange(): void {\n    this.onCountChange.emit(this.count);\n  }\n\n  decreaseCount(): void {\n    if (this.count > 1) {\n      this.count--;\n      this.countChange()\n    }\n  }\n\n  increaseCount(): void {\n    this.count++;\n    this.countChange()\n  }\n}\n","<div class=\"count-selector\">\n  <div (click)=\"decreaseCount()\">\n    <svg width=\"10\" height=\"3\" viewBox=\"0 0 10 3\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M9.14019 3V0H0V3H9.14019Z\" fill=\"#9AA89B\"/>\n    </svg>\n  </div>\n  <input type=\"text\" name=\"\" id=\"\" class=\"small-input\" [(ngModel)]=\"count\" (change)=\"countChange()\">\n  <div (click)=\"increaseCount()\">\n    <svg width=\"13\" height=\"12\" viewBox=\"0 0 13 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M7.34934 12V7.20896H12.1406V4.81343H7.34934V0H4.95369V4.81343H0.140625V7.20896H4.95369V12H7.34934Z\"\n            fill=\"#9AA89B\"/>\n    </svg>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ProductType} from \"../../../../types/product\";\nimport {environment} from \"../../../../environments/environment\";\nimport {CartService} from \"../../services/cart.service\";\nimport {CartType} from \"../../../../types/cart.type\";\n\n@Component({\n  selector: 'product-card',\n  templateUrl: './product-card.component.html',\n  styleUrls: ['./product-card.component.scss']\n})\nexport class ProductCardComponent implements OnInit {\n\n  @Input() product!: ProductType;\n  serverStaticPath: string = environment.serverStaticPath;\n  count: number = 1;\n  @Input() isLight: boolean = false;\n  @Input() countInCart: number | undefined = 0;\n\n  constructor(private cartService: CartService) { }\n\n  ngOnInit(): void {\n    if(this.countInCart && this.countInCart > 0) {\n      this.count = this.countInCart\n    }\n\n  }\n\n\n  addToCart() {\n    this.cartService.updateCart(this.product.id, this.count)\n      .subscribe((data: CartType) => {\n        this.countInCart = this.count;\n      })\n  }\n\n  updateCount(value: number) {\n    if (this.countInCart) {\n      this.count = value;\n      this.cartService.updateCart(this.product.id, this.count)\n        .subscribe((data: CartType) => {\n          this.countInCart = this.count;\n        })\n    }\n  }\n\n  removeFromCart() {\n    this.cartService.updateCart(this.product.id, 0)\n      .subscribe((data: CartType) => {\n        this.countInCart = 0;\n        this.count = 1;\n      })\n  }\n\n}\n","<div class=\"product-card\" *ngIf=\"product\" [routerLink]=\"isLight ? ['/product/' + product.url] : []\" [class.is-light] = \"isLight\">\n  <div class=\"product-card-favorite\" *ngIf=\"!isLight\">\n<!--    <span>\n      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M11.9997 20.846C11.7155 20.846 11.4405 20.8093 11.2113 20.7268C7.70967 19.526 2.14551 15.2635 2.14551 8.96596C2.14551 5.75763 4.73967 3.1543 7.92967 3.1543C9.47884 3.1543 10.9272 3.7593 11.9997 4.84096C13.0722 3.7593 14.5205 3.1543 16.0697 3.1543C19.2597 3.1543 21.8538 5.7668 21.8538 8.96596C21.8538 15.2726 16.2897 19.526 12.788 20.7268C12.5588 20.8093 12.2838 20.846 11.9997 20.846ZM7.92967 4.5293C5.50051 4.5293 3.52051 6.51846 3.52051 8.96596C3.52051 15.2268 9.54301 18.7101 11.6605 19.4343C11.8255 19.4893 12.183 19.4893 12.348 19.4343C14.4563 18.7101 20.488 15.236 20.488 8.96596C20.488 6.51846 18.508 4.5293 16.0788 4.5293C14.6855 4.5293 13.393 5.18013 12.5588 6.30763C12.3022 6.65596 11.7155 6.65596 11.4588 6.30763C10.6063 5.17096 9.32301 4.5293 7.92967 4.5293Z\" fill=\"#B6D5B9\"/>\n        <path d=\"M7.92967 4.5293C5.50051 4.5293 3.52051 6.51846 3.52051 8.96596C3.52051 15.2268 9.54301 18.7101 11.6605 19.4343C11.8255 19.4893 12.183 19.4893 12.348 19.4343C14.4563 18.7101 20.488 15.236 20.488 8.96596C20.488 6.51846 18.508 4.5293 16.0788 4.5293C14.6855 4.5293 13.393 5.18013 12.5588 6.30763C12.3022 6.65596 11.7155 6.65596 11.4588 6.30763C10.6063 5.17096 9.32301 4.5293 7.92967 4.5293Z\" fill=\"#B6D5B9\"/>\n      </svg>\n    </span>-->\n    <span>\n      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M11.9997 20.8457C11.7155 20.8457 11.4405 20.8091 11.2113 20.7266C7.70967 19.5257 2.14551 15.2632 2.14551 8.96572C2.14551 5.75739 4.73967 3.15405 7.92967 3.15405C9.47884 3.15405 10.9272 3.75905 11.9997 4.84072C13.0722 3.75905 14.5205 3.15405 16.0697 3.15405C19.2597 3.15405 21.8538 5.76655 21.8538 8.96572C21.8538 15.2724 16.2897 19.5257 12.788 20.7266C12.5588 20.8091 12.2838 20.8457 11.9997 20.8457ZM7.92967 4.52905C5.50051 4.52905 3.52051 6.51822 3.52051 8.96572C3.52051 15.2266 9.54301 18.7099 11.6605 19.4341C11.8255 19.4891 12.183 19.4891 12.348 19.4341C14.4563 18.7099 20.488 15.2357 20.488 8.96572C20.488 6.51822 18.508 4.52905 16.0788 4.52905C14.6855 4.52905 13.393 5.17989 12.5588 6.30739C12.3022 6.65572 11.7155 6.65572 11.4588 6.30739C10.6063 5.17072 9.32301 4.52905 7.92967 4.52905Z\" fill=\"#383838\"/>\n      </svg>\n    </span>\n  </div>\n  <div class=\"product-card-image\" style=\"background-image: url('{{serverStaticPath + product.image}}')\">\n\n  </div>\n  <div class=\"product-card-name\">\n    {{product.name}}\n  </div>\n  <div class=\"product-card-info\" *ngIf=\"!isLight\">\n    <div class=\"product-card-price\">\n      {{product.price}} BYN\n    </div>\n    <div class=\"product-card-action\">\n      <button class=\"button\" *ngIf=\"!countInCart\" (click)=\"addToCart()\">В корзину</button>\n      <button class=\"button button-transparent button-in-cart\" *ngIf=\"countInCart\" (click)=\"removeFromCart()\">\n        <span>В корзине</span>\n        <span>Удалить</span>\n      </button>\n    </div>\n  </div>\n  <div class=\"product-card-extra\" *ngIf=\"!isLight\">\n    <count-selector [count]=\"count\" (onCountChange)=\"updateCount($event)\"></count-selector>\n    <a [routerLink]=\"'/product/' + product.url\" class=\"product-card-detail\">\n      <svg width=\"18\" height=\"4\" viewBox=\"0 0 18 4\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle cx=\"2.66699\" cy=\"2\" r=\"2\" fill=\"#9AA89B\"/>\n        <circle cx=\"9.33398\" cy=\"2\" r=\"2\" fill=\"#9AA89B\"/>\n        <circle cx=\"16\" cy=\"2\" r=\"2\" fill=\"#9AA89B\"/>\n      </svg>\n      <span>Подробнее</span>\n    </a>\n  </div>\n</div>\n\n","import { Directive } from '@angular/core';\nimport {AbstractControl, NG_VALIDATORS, ValidationErrors, Validators} from \"@angular/forms\";\n\n@Directive({\n  selector: '[PasswordRepeat]',\n  providers: [{provide: NG_VALIDATORS, useExisting: PasswordRepeatDirective, multi: true} ]\n})\nexport class PasswordRepeatDirective implements  Validators {\n\n  validate(control: AbstractControl): ValidationErrors | null {\n    const password = control.get('password');\n    const passwordRepeat = control.get('passwordRepeat');\n\n    if(password?.value !== passwordRepeat?.value) {\n      passwordRepeat?.setErrors({passwordRepeat: true})\n      return {passwordRepeat: true}\n    }\n    return null;\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {CategoryType} from \"../../../../types/category.type\";\nimport {CategoryWithTypeType} from \"../../../../types/category-with-type\";\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  @Input() categories: CategoryWithTypeType[] = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"footer\">\n  <div class=\"container\">\n    <a href=\"\" class=\"logo\">\n      <img src=\"assets/images/green-logo.png\" alt=\"Логотип\">\n    </a>\n    <div class=\"footer-block footer-menu\">\n      <div class=\"footer-head\">\n        МЕНЮ\n      </div>\n      <nav class=\"footer-items\">\n        <ul>\n          <li>\n            <a routerLink=\"/\">Главная</a>\n          </li>\n          <li>\n            <a>Каталог</a>\n          </li>\n          <li>\n            <a>Доставка и оплата</a>\n          </li>\n          <li>\n            <a>Новости</a>\n          </li>\n          <li>\n            <a>Отзывы</a>\n          </li>\n        </ul>\n      </nav>\n    </div>\n    <div class=\"footer-block footer-categories\">\n      <div class=\"footer-head\">\n        КАТЕГОРИИ\n      </div>\n      <nav class=\"footer-items\">\n        <ul>\n          <li *ngFor=\"let category of categories\">\n            <a routerLink=\"/catalog\" [queryParams]=\"{types: category?.typesUrl}\">{{category.name}}</a>\n          </li>\n        </ul>\n      </nav>\n    </div>\n    <div class=\"footer-block footer-info\">\n      <div class=\"footer-head\">\n        МЫ В СОЦИАЛЬНЫХ СЕТЯХ\n      </div>\n      <div class=\"footer-social\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M6.81152 3.74976C5.12988 3.74976 3.75 5.12964 3.75 6.81128V17.1882C3.75 18.8699 5.12988 20.2498 6.81152 20.2498H17.1885C18.8701 20.2498 20.25 18.8699 20.25 17.1882V6.81128C20.25 5.12964 18.8701 3.74976 17.1885 3.74976H6.81152ZM6.81152 5.24976H17.1885C18.0586 5.24976 18.75 5.94116 18.75 6.81128V17.1882C18.75 18.0583 18.0586 18.7498 17.1885 18.7498H6.81152C5.94141 18.7498 5.25 18.0583 5.25 17.1882V6.81128C5.25 5.94116 5.94141 5.24976 6.81152 5.24976ZM11.7891 9.17261C11.2383 9.16675 10.7695 9.17261 10.5059 9.30151C10.3301 9.38647 10.1953 9.57983 10.2773 9.58862C10.3799 9.60327 10.6113 9.65308 10.7344 9.82007C10.8926 10.0339 10.8867 10.5173 10.8867 10.5173C10.8867 10.5173 10.9746 11.8474 10.6729 12.0144C10.4648 12.1287 10.1807 11.8972 9.56543 10.8396C9.25195 10.2947 9.01465 9.69409 9.01465 9.69409C9.01465 9.69409 8.9707 9.58276 8.88867 9.52417C8.78906 9.45093 8.65137 9.42749 8.65137 9.42749L7.18359 9.43628C7.18359 9.43628 6.96387 9.44507 6.88477 9.53882C6.81152 9.62671 6.87891 9.79956 6.87891 9.79956C6.87891 9.79956 8.02734 12.4861 9.32812 13.8396C10.5205 15.0818 11.874 14.9998 11.874 14.9998H12.4893C12.4893 14.9998 12.6738 14.9792 12.7676 14.8796C12.8555 14.7859 12.8525 14.6101 12.8525 14.6101C12.8525 14.6101 12.8408 13.7869 13.2217 13.6638C13.5996 13.5466 14.0801 14.4607 14.5928 14.8123C14.9824 15.0789 15.2783 15.0203 15.2783 15.0203L16.6494 14.9998C16.6494 14.9998 17.3643 14.9558 17.0244 14.3904C16.998 14.3464 16.8281 13.9744 16.0078 13.2126C15.1465 12.4158 15.2607 12.5447 16.2979 11.1648C16.9277 10.324 17.1797 9.81128 17.1006 9.58862C17.0244 9.38062 16.5615 9.43628 16.5615 9.43628L15.0176 9.44507C15.0176 9.44507 14.9033 9.43042 14.8184 9.48022C14.7363 9.53003 14.6836 9.64722 14.6836 9.64722C14.6836 9.64722 14.4375 10.2976 14.1123 10.8513C13.4268 12.0173 13.1484 12.0818 13.0371 12.0085C12.7764 11.8386 12.8408 11.3289 12.8408 10.9685C12.8408 9.83472 13.0137 9.36597 12.5068 9.24292C12.3398 9.2019 12.2168 9.17554 11.7891 9.17261Z\" fill=\"#2C2C2C\"/>\n        </svg>\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M12 3.00024C7.03832 3.00024 3 7.03856 3 12.0002C3 16.9619 7.03832 21.0002 12 21.0002C16.9617 21.0002 21 16.9619 21 12.0002C21 7.03856 16.9617 3.00024 12 3.00024ZM12 4.50024C16.151 4.50024 19.5 7.84923 19.5 12.0002C19.5 15.7708 16.7338 18.8712 13.1162 19.4094V14.1873H15.252L15.5874 12.0178H13.1162V10.8328C13.1162 9.93201 13.4121 9.13208 14.2544 9.13208H15.6079V7.2395C15.3702 7.20725 14.867 7.13696 13.916 7.13696C11.93 7.13696 10.7666 8.18545 10.7666 10.575V12.0178H8.72461V14.1873H10.7666V19.3904C7.20664 18.8032 4.5 15.73 4.5 12.0002C4.5 7.84923 7.84898 4.50024 12 4.50024Z\" fill=\"#2C2C2C\"/>\n        </svg>\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M8.60156 3.74976C5.93848 3.74976 3.75 5.9353 3.75 8.60132V15.3982C3.75 18.0613 5.93555 20.2498 8.60156 20.2498H15.3984C18.0615 20.2498 20.25 18.0642 20.25 15.3982V8.60132C20.25 5.93823 18.0645 3.74976 15.3984 3.74976H8.60156ZM8.60156 5.24976H15.3984C17.2529 5.24976 18.75 6.74683 18.75 8.60132V15.3982C18.75 17.2527 17.2529 18.7498 15.3984 18.7498H8.60156C6.74707 18.7498 5.25 17.2527 5.25 15.3982V8.60132C5.25 6.74683 6.74707 5.24976 8.60156 5.24976ZM16.4297 6.89038C16.0518 6.89038 15.75 7.19214 15.75 7.57007C15.75 7.948 16.0518 8.24976 16.4297 8.24976C16.8076 8.24976 17.1094 7.948 17.1094 7.57007C17.1094 7.19214 16.8076 6.89038 16.4297 6.89038ZM12 7.49976C9.52441 7.49976 7.5 9.52417 7.5 11.9998C7.5 14.4753 9.52441 16.4998 12 16.4998C14.4756 16.4998 16.5 14.4753 16.5 11.9998C16.5 9.52417 14.4756 7.49976 12 7.49976ZM12 8.99976C13.667 8.99976 15 10.3328 15 11.9998C15 13.6667 13.667 14.9998 12 14.9998C10.333 14.9998 9 13.6667 9 11.9998C9 10.3328 10.333 8.99976 12 8.99976Z\" fill=\"#2C2C2C\"/>\n        </svg>\n      </div>\n      <div class=\"footer-payment\">\n        <div class=\"payment-item\" style=\"background-image: url('/assets/images/payment/31.png')\">&nbsp;</div>\n        <div class=\"payment-item\" style=\"background-image: url('/assets/images/payment/32.png')\">&nbsp;</div>\n        <div class=\"payment-item\" style=\"background-image: url('/assets/images/payment/33.png')\">&nbsp;</div>\n        <div class=\"payment-item\" style=\"background-image: url('/assets/images/payment/34.png')\">&nbsp;</div>\n        <div class=\"payment-item\" style=\"background-image: url('/assets/images/payment/35.png')\">&nbsp;</div>\n        <div class=\"payment-item\" style=\"background-image: url('/assets/images/payment/36.png')\">&nbsp;</div>\n      </div>\n    </div>\n    <div class=\"footer-block footer-contacts\">\n      <div class=\"footer-head\">\n        КОНТАКТЫ\n      </div>\n      <div class=\"footer-contact\">\n        <div class=\"footer-contact-head\">\n          Адрес\n        </div>\n        <div class=\"footer-contact-content\">\n          г. Минск,  ул. Калиновского 61, подъезд 1, офис 6\n        </div>\n      </div>\n      <div class=\"footer-contact\">\n        <div class=\"footer-contact-head\">\n          Телефон\n        </div>\n        <div class=\"footer-contact-content\">\n          + 375 (29) 922-29-99\n        </div>\n      </div>\n      <div class=\"footer-contact\">\n        <div class=\"footer-contact-head\">\n          E-mail\n        </div>\n        <div class=\"footer-contact-content\">\n          homedecor@gmail.com\n        </div>\n      </div>\n    </div>\n  </div>\n</footer>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {CategoryService} from \"../../services/category.service\";\nimport {CategoryType} from \"../../../../types/category.type\";\nimport {AuthService} from \"../../../core/auth/auth.service\";\nimport {DefaultResponseType} from \"../../../../types/default-response.type\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {error} from \"@angular/compiler-cli/src/transformers/util\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {Router} from \"@angular/router\";\nimport {CategoryWithTypeType} from \"../../../../types/category-with-type\";\nimport {CartService} from \"../../services/cart.service\";\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  count: number = 0;\n  isLogged: boolean = false;\n  @Input()  categories: CategoryWithTypeType[] = [];\n\n  constructor(private authService: AuthService,\n              private _snackBar : MatSnackBar,\n              private cartService: CartService,\n              private router: Router) {\n    this.isLogged = this.authService.getIsLoggedIn();\n  }\n\n  ngOnInit(): void {\n      this.authService.isLogged$.subscribe((isLoggedIn:boolean) => {\n        this.isLogged = isLoggedIn;\n      })\n\n    this.cartService.getCartCount()\n      .subscribe(data => {\n        this.count = data.count;\n      })\n\n    this.cartService.count$\n      .subscribe(count => this.count = count)\n  }\n\n  logout(): void {\n    this.authService.logout()\n      .subscribe({\n        next: () => {\n         this.doLogout();\n        },\n        error: () => {\n          this.doLogout();\n        }\n      })\n\n  }\n\n  doLogout(): void {\n    this.authService.removeTokens();\n    this.authService.userId = null;\n    this._snackBar.open('Вы успешно вышли из системы');\n    this.router.navigate(['/']);\n  }\n}\n","<header class=\"header\">\n  <div class=\"container\">\n    <a href=\"#\" class=\"logo\">\n      <img src=\"assets/images/logo.png\" alt=\"\">\n    </a>\n    <div class=\"header-content\">\n      <div class=\"header-top\">\n        <div class=\"header-top-menu\">\n          <nav>\n            <ul>\n              <li>\n                <a routerLink=\"/\">Главная</a>\n              </li>\n              <li>\n                <a routerLink=\"/catalog\">Каталог</a>\n              </li>\n              <li>\n                <a>Отзывы</a>\n              </li>\n              <li>\n                <a>Доставка и оплата</a>\n              </li>\n            </ul>\n          </nav>\n        </div>\n        <div class=\"header-top-phone\">\n          <a href=\"tel:+375299182888\">\n          + 375 (29) 918-28-88\n          </a>\n        </div>\n        <div class=\"header-top-actions\">\n          <a routerLink=\"/login\" *ngIf=\"!isLogged\">\n            <svg width=\"23\" height=\"23\" viewBox=\"0 0 23 23\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M8.5293 7.24498C8.82638 3.79498 10.5993 2.38623 14.4805 2.38623H14.6051C18.8889 2.38623 20.6043 4.10165 20.6043 8.3854V14.6337C20.6043 18.9175 18.8889 20.6329 14.6051 20.6329H14.4805C10.628 20.6329 8.85513 19.2433 8.53888 15.8508\" stroke=\"#202B21\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n              <path d=\"M1.91699 11.5H14.2603\" stroke=\"#202B21\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n              <path d=\"M12.123 8.28955L15.3335 11.5L12.123 14.7104\" stroke=\"#202B21\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            </svg>\n          </a>\n          <a *ngIf=\"isLogged\" [matMenuTriggerFor]=\"menu\" >\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M12.1207 12.78C12.0507 12.77 11.9607 12.77 11.8807 12.78C10.1207 12.72 8.7207 11.28 8.7207 9.50998C8.7207 7.69998 10.1807 6.22998 12.0007 6.22998C13.8107 6.22998 15.2807 7.69998 15.2807 9.50998C15.2707 11.28 13.8807 12.72 12.1207 12.78Z\" stroke=\"#202B21\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n              <path d=\"M18.7398 19.3801C16.9598 21.0101 14.5998 22.0001 11.9998 22.0001C9.39977 22.0001 7.03977 21.0101 5.25977 19.3801C5.35977 18.4401 5.95977 17.5201 7.02977 16.8001C9.76977 14.9801 14.2498 14.9801 16.9698 16.8001C18.0398 17.5201 18.6398 18.4401 18.7398 19.3801Z\" stroke=\"#202B21\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n              <path d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\" stroke=\"#202B21\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            </svg>\n          </a>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item>\n              <a routerLink=\"/profile\">Профиль</a>\n            </button>\n            <button mat-menu-item>\n              <span (click)=\"logout()\">Выйти</span>\n            </button>\n          </mat-menu>\n          <a routerLink=\"/favorite\">\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M11.9997 20.846C11.7155 20.846 11.4405 20.8093 11.2113 20.7268C7.70967 19.526 2.14551 15.2635 2.14551 8.96596C2.14551 5.75763 4.73967 3.1543 7.92967 3.1543C9.47884 3.1543 10.9272 3.7593 11.9997 4.84096C13.0722 3.7593 14.5205 3.1543 16.0697 3.1543C19.2597 3.1543 21.8538 5.7668 21.8538 8.96596C21.8538 15.2726 16.2897 19.526 12.788 20.7268C12.5588 20.8093 12.2838 20.846 11.9997 20.846ZM7.92967 4.5293C5.50051 4.5293 3.52051 6.51846 3.52051 8.96596C3.52051 15.2268 9.54301 18.7101 11.6605 19.4343C11.8255 19.4893 12.183 19.4893 12.348 19.4343C14.4563 18.7101 20.488 15.236 20.488 8.96596C20.488 6.51846 18.508 4.5293 16.0788 4.5293C14.6855 4.5293 13.393 5.18013 12.5588 6.30763C12.3022 6.65596 11.7155 6.65596 11.4588 6.30763C10.6063 5.17096 9.32301 4.5293 7.92967 4.5293Z\" fill=\"#202B21\"/>\n            </svg>\n          </a>\n          <a routerLink=\"/cart\">\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M6.32507 7.31686C6.16673 7.31686 6.00007 7.2502 5.8834 7.13353C5.64173 6.89186 5.64173 6.49186 5.8834 6.2502L8.9084 3.2252C9.15007 2.98353 9.55007 2.98353 9.79173 3.2252C10.0334 3.46686 10.0334 3.86686 9.79173 4.10853L6.76673 7.13353C6.64173 7.2502 6.4834 7.31686 6.32507 7.31686Z\" fill=\"#202B21\"/>\n              <path d=\"M17.6753 7.31686C17.5169 7.31686 17.3586 7.25853 17.2336 7.13353L14.2086 4.10853C13.9669 3.86686 13.9669 3.46686 14.2086 3.2252C14.4503 2.98353 14.8503 2.98353 15.0919 3.2252L18.1169 6.2502C18.3586 6.49186 18.3586 6.89186 18.1169 7.13353C18.0003 7.2502 17.8336 7.31686 17.6753 7.31686Z\" fill=\"#202B21\"/>\n              <path d=\"M18.842 10.8333C18.7837 10.8333 18.7253 10.8333 18.667 10.8333H18.4753H5.33366C4.75033 10.8417 4.08366 10.8417 3.60033 10.3583C3.21699 9.98333 3.04199 9.4 3.04199 8.54167C3.04199 6.25 4.71699 6.25 5.51699 6.25H18.4837C19.2837 6.25 20.9587 6.25 20.9587 8.54167C20.9587 9.40833 20.7837 9.98333 20.4003 10.3583C19.967 10.7917 19.3837 10.8333 18.842 10.8333ZM5.51699 9.58333H18.6753C19.0503 9.59167 19.4003 9.59167 19.517 9.475C19.5753 9.41667 19.7003 9.21667 19.7003 8.54167C19.7003 7.6 19.467 7.5 18.4753 7.5H5.51699C4.52533 7.5 4.29199 7.6 4.29199 8.54167C4.29199 9.21667 4.42533 9.41667 4.47533 9.475C4.59199 9.58333 4.95033 9.58333 5.31699 9.58333H5.51699Z\" fill=\"#202B21\"/>\n              <path d=\"M10.1338 17.2498C9.79212 17.2498 9.50879 16.9665 9.50879 16.6248V13.6665C9.50879 13.3248 9.79212 13.0415 10.1338 13.0415C10.4755 13.0415 10.7588 13.3248 10.7588 13.6665V16.6248C10.7588 16.9748 10.4755 17.2498 10.1338 17.2498Z\" fill=\"#202B21\"/>\n              <path d=\"M13.9668 17.2498C13.6251 17.2498 13.3418 16.9665 13.3418 16.6248V13.6665C13.3418 13.3248 13.6251 13.0415 13.9668 13.0415C14.3085 13.0415 14.5918 13.3248 14.5918 13.6665V16.6248C14.5918 16.9748 14.3085 17.2498 13.9668 17.2498Z\" fill=\"#202B21\"/>\n              <path d=\"M14.4083 20.9581H9.38329C6.39996 20.9581 5.73329 19.1831 5.47496 17.6415L4.29996 10.4331C4.24162 10.0915 4.47496 9.7748 4.81662 9.71646C5.15829 9.65813 5.47496 9.89146 5.53329 10.2331L6.70829 17.4331C6.94996 18.9081 7.44996 19.7081 9.38329 19.7081H14.4083C16.55 19.7081 16.7916 18.9581 17.0666 17.5081L18.4666 10.2165C18.5333 9.87479 18.8583 9.6498 19.2 9.7248C19.5416 9.79146 19.7583 10.1165 19.6916 10.4581L18.2916 17.7498C17.9666 19.4415 17.425 20.9581 14.4083 20.9581Z\" fill=\"#202B21\"/>\n            </svg>\n            <span>{{count}}</span>\n          </a>\n\n        </div>\n      </div>\n      <div class=\"header-bottom\">\n        <div class=\"header-bottom-menu\">\n          <nav>\n            <ul>\n              <li *ngFor=\"let category of categories\">\n                <a routerLink=\"/catalog\" [queryParams]=\"{types: category?.typesUrl}\">{{category.name}}</a>\n              </li>\n            </ul>\n          </nav>\n        </div>\n        <div class=\"header-bottom-search\">\n          <input type=\"text\" placeholder=\"Начните искать\">\n        </div>\n\n      </div>\n    </div>\n  </div>\n</header>\n","import { Component, OnInit } from '@angular/core';\nimport {CategoryType} from \"../../../types/category.type\";\nimport {CategoryService} from \"../services/category.service\";\nimport {CategoryWithTypeType} from \"../../../types/category-with-type\";\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n})\n\nexport class LayoutComponent implements OnInit {\n\n  categories: CategoryWithTypeType[] = [];\n\n  constructor(private categoryService: CategoryService) { }\n\n  ngOnInit(): void {\n    this.categoryService.getCategoriesWithTypes()\n      .subscribe((categories: CategoryWithTypeType[]) => {\n        this.categories = categories.map(item => {\n          return Object.assign({itemUrl: item.types.map(item => item.url)}, item)\n        });\n\n      })\n  }\n\n}\n","<app-header [categories]=\"categories\"></app-header>\n<router-outlet></router-outlet>\n<app-footer [categories]=\"categories\"></app-footer>\n\n","import { Injectable } from '@angular/core';\nimport {Observable, Subject, tap} from \"rxjs\";\nimport {environment} from \"../../../environments/environment\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {CartType} from \"../../../types/cart.type\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CartService {\n\n  count: number = 0;\n  count$: Subject<number> = new Subject<number>();\n\n  constructor(private http: HttpClient) { }\n\n  getCart(): Observable<CartType> {\n    return this.http.get<CartType>(environment.api + \"cart\", {withCredentials: true})\n  }\n\n  getCartCount(): Observable<{count: number}> {\n    return this.http.get<{count: number}>(environment.api + \"cart/count\", {withCredentials: true})\n      .pipe(\n        tap(data => {\n          this.count = data.count;\n          this.count$.next(this.count);\n        })\n      )\n\n  }\n\n  updateCart(productId: string, quantity: number): Observable<CartType> {\n    return this.http.post<CartType>(environment.api + \"cart\", {productId, quantity}, {withCredentials: true})\n      .pipe(\n        tap(data => {\n          this.count = 0;\n          data.items.forEach(item => {\n            this.count += item.quantity;\n          })\n          this.count$.next(this.count);\n        })\n      )\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {map, Observable} from \"rxjs\";\nimport {CategoryType} from \"../../../types/category.type\";\nimport {environment} from \"../../../environments/environment\";\nimport {TypeType} from \"../../../types/type.type\";\nimport {CategoryWithTypeType} from \"../../../types/category-with-type\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  getCategories (): Observable<CategoryType[]> {\n    return this.http.get<CategoryType[]>(environment.api + \"categories\")\n  }\n\n  getCategoriesWithTypes (): Observable<CategoryWithTypeType[]> {\n    return this.http.get<TypeType[]>(environment.api + \"types\")\n      .pipe(\n        map((items: TypeType[])  => {\n          const array: CategoryWithTypeType[] = [];\n          items.forEach((item:TypeType) => {\n\n            const foundItem = array.find(arrayItem => arrayItem.url === item.category.url);\n\n            if (foundItem) {\n              foundItem.types.push({\n                id: item.id,\n                name: item.name,\n                url: item.url\n              });\n            } else {\n              array.push({\n                id: item.category.id,\n                name: item.category.name,\n                url: item.category.url,\n                types: [\n                  {\n                    id: item.id,\n                    name: item.name,\n                    url: item.url\n                  }\n                ]\n              })\n            }\n          })\n          return array\n        })\n      )\n\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {CategoryType} from \"../../../types/category.type\";\nimport {environment} from \"../../../environments/environment\";\nimport {ProductType} from \"../../../types/product\";\nimport {ActiveParamsType} from \"../../../types/active-params-type\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  getBestProducts (): Observable<ProductType[]> {\n    return this.http.get<ProductType[]>(environment.api + \"products/best\")\n  }\n\n  getProducts (params: ActiveParamsType): Observable<{totalCount: number, pages: number, items: ProductType[]}> {\n    return this.http.get<{totalCount: number, pages: number, items: ProductType[]}>(environment.api + \"products\", {\n      params: params\n    })\n  }\n  getProduct (url: string): Observable<ProductType> {\n    return this.http.get<ProductType>(environment.api + \"products/\" + url)\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {PasswordRepeatDirective} from \"./directives/password-repeat.directive\";\nimport { ProductCardComponent } from './components/product-card/product-card.component';\nimport {RouterModule} from \"@angular/router\";\nimport {FormsModule} from \"@angular/forms\";\nimport { CategoryFilterComponent } from './components/category-filter/category-filter.component';\nimport { CountSelectorComponent } from './components/count-selector/count-selector.component';\n\n\n\n\n\n@NgModule({\n  declarations: [\n    PasswordRepeatDirective,\n    ProductCardComponent,\n    CategoryFilterComponent,\n    CountSelectorComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule\n  ],\n  exports: [\n    PasswordRepeatDirective,\n    ProductCardComponent,\n    CategoryFilterComponent,\n    CountSelectorComponent\n  ]\n})\nexport class SharedModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {ProductService} from \"../../shared/services/product.service\";\nimport {ProductType} from \"../../../types/product\";\nimport {OwlOptions} from \"ngx-owl-carousel-o\";\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  products: ProductType[] = [];\n\n  customOptions: OwlOptions = {\n    loop: true,\n    mouseDrag: false,\n    touchDrag: false,\n    pullDrag: false,\n    dots: false,\n    navSpeed: 700,\n    navText: ['', ''],\n    responsive: {\n      0: {\n        items: 1\n      },\n      400: {\n        items: 2\n      },\n      740: {\n        items: 3\n      },\n      940: {\n        items: 4\n      }\n    },\n    nav: false\n  }\n\n  customOptionsReviews: OwlOptions = {\n    loop: true,\n    mouseDrag: false,\n    touchDrag: false,\n    pullDrag: false,\n    margin: 26,\n    dots: false,\n    navSpeed: 700,\n    navText: ['', ''],\n    responsive: {\n      0: {\n        items: 1\n      },\n      400: {\n        items: 2\n      },\n      740: {\n        items: 3\n      }\n    },\n    nav: false\n  }\n\n  reviews = [\n    {\n      name: \"Ирина\",\n      image: \"review1.png\",\n      text: \"В ассортименте я встретила все комнатные растения, которые меня интересовали. Цены - лучшие в городе. Доставка - очень быстрая и с заботой о растениях. \"\n    },\n    {\n      name: \"Анастасия\",\n      image: \"review2.png\",\n      text: \"Спасибо огромное! Цветок арека невероятно красив - просто бомба! От него все в восторге! Спасибо за сервис - все удобно сделано, доставили быстро. И милая открыточка приятным бонусом.\"\n    },\n    {\n      name: \"Илья\",\n      image: \"review3.png\",\n      text: \"Магазин супер! Второй раз заказываю курьером, доставлено в лучшем виде. Ваш ассортимент комнатных растений впечатляет! Спасибо вам за хорошую работу!\"\n    },\n    {\n      name: \"Аделина\",\n      image: \"review4.jpg\",\n      text: \"Хочу поблагодарить всю команду за помощь в подборе подарка для моей мамы! Все просто в восторге от мини-сада! А самое главное, что за ним удобно ухаживать, ведь в комплекте мне дали целую инструкцию.\"\n    },\n    {\n      name: \"Яника\",\n      image: \"review5.jpg\",\n      text: \"Спасибо большое за мою обновлённую коллекцию суккулентов! Сервис просто на 5+: быстро, удобно, недорого. Что ещё нужно клиенту для счастья?\"\n    },\n    {\n      name: \"Марина\",\n      image: \"review6.jpg\",\n      text: \"Для меня всегда важным аспектом было наличие не только физического магазина, но и онлайн-маркета, ведь не всегда есть возможность прийти на место. Ещё нигде не встречала такого огромного ассортимента!\"\n    }\n  ]\n\n  constructor(private productService: ProductService) { }\n\n  ngOnInit(): void {\n    this.productService.getBestProducts()\n      .subscribe((data: ProductType[]) => {\n        this.products = data;\n      });\n  }\n\n}\n","<section class=\"main\">\n  <div class=\"container\">\n    <div class=\"main-title\">\n      Создадим сад <br>\n      в вашем доме и офисе\n    </div>\n    <div class=\"main-text\">\n      Если в большом городе вы скучаете по природе,\n      ничто не мешает вам превратить в оазис квартиру или офис. И мы поможем вам это сделать!\n    </div>\n  </div>\n</section>\n\n<section class=\"offers\">\n  <div class=\"container\">\n    <div class=\"offer offer-insta\">\n      <div class=\"offer-title\">Получи скидку 10% в нашем инстаграме!</div>\n      <div class=\"offer-content\">\n        <div class=\"offer-image\">\n          <img src=\"/assets/images/page/offer1.png\" alt=\"flower\">\n        </div>\n        <div class=\"offer-inner-content\">\n          <div class=\"offer-text\">\n            Подпишись на наш аккаунт и напиши в direct “хочу промокод”\n          </div>\n          <div class=\"offer-button\">\n            <a href=\"#\" class=\"button\">Получить промокод</a>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"offer offer-collection\">\n      <div class=\"offer-title\">Новая коллекция керамических кашпо в наличии</div>\n      <div class=\"offer-content\">\n        <div class=\"offer-image\">\n          <img src=\"/assets/images/page/offer2.png\" alt=\"flower\">\n        </div>\n        <div class=\"offer-button\">\n          <a routerLink=\"/catalog\" class=\"button\">В каталог</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n\n<section class=\"best-products\">\n  <div class=\"container\">\n    <div class=\"carousel-header\">\n      <div class=\"carousel-title\">\n        Лучшие предложения месяца\n      </div>\n      <div class=\"carousel-arrows\">\n        <div class=\"move-backward\" (click)=\"owlCar.prev()\">\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5561 15C10.4013 15 10.2465 14.9435 10.1243 14.8224L4.8127 9.55746C3.94915 8.70151 3.94915 7.29647 4.8127 6.44052L10.1243 1.17563C10.3606 0.941456 10.7516 0.941456 10.9879 1.17563C11.2241 1.40981 11.2241 1.7974 10.9879 2.03158L5.67624 7.29647C5.2852 7.68407 5.2852 8.31392 5.67624 8.70151L10.9879 13.9664C11.2241 14.2006 11.2241 14.5882 10.9879 14.8224C10.8657 14.9354 10.7109 15 10.5561 15Z\" fill=\"#202B21\"/>\n          </svg>\n        </div>\n        <div class=\"move-forward\" (click)=\"owlCar.next()\">\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M5.44392 1C5.59871 1 5.75349 1.05652 5.87569 1.17765L11.1873 6.44254C12.0508 7.29849 12.0508 8.70353 11.1873 9.55948L5.87569 14.8244C5.63944 15.0585 5.2484 15.0585 5.01215 14.8244C4.7759 14.5902 4.7759 14.2026 5.01215 13.9684L10.3238 8.70353C10.7148 8.31593 10.7148 7.68608 10.3238 7.29849L5.01215 2.0336C4.7759 1.79942 4.7759 1.41182 5.01215 1.17765C5.13435 1.0646 5.28914 1 5.44392 1Z\" fill=\"#202B21\"/>\n          </svg>\n        </div>\n      </div>\n    </div>\n    <div class=\"carousel-items\">\n      <owl-carousel-o [options]=\"customOptions\" #owlCar>\n        <ng-template carouselSlide *ngFor=\"let product of products\" >\n          <product-card [product]=\"product\"></product-card>\n        </ng-template>\n      </owl-carousel-o>\n    </div>\n  </div>\n</section>\n\n<section class=\"info\">\n  <div class=\"container\">\n    <div class=\"info-title\">\n       Доставка и оплата\n    </div>\n    <div class=\"info-item info-delivery\">\n      <div class=\"info-image\">\n        <img src=\"/assets/images/page/delivery-circle.png\" alt=\"delivery\">\n      </div>\n      <div class=\"info-text\">\n        <div class=\"info-text-main\">1. Доставка курьером (по г. Минску) - 10 BYN</div>\n        <div class=\"info-text-extra\">На следующий день после оформления заказа</div>\n      </div>\n      <div class=\"info-text\">\n        <div class=\"info-text-main\">2. Самовывоз - 0 BYN</div>\n        <div class=\"info-text-extra\">Пункт выдачи товаров: г. Минск, ул. Калиновского 61, подъезд 1, офис 6</div>\n      </div>\n    </div>\n    <div class=\"info-item info-payment\">\n      <div class=\"info-image\">\n        <img src=\"/assets/images/page/payment-circle.png\" alt=\"payment\">\n      </div>\n      <div class=\"info-text\">\n        <div class=\"info-text-main\">1. Наличный расчет при получении</div>\n      </div>\n      <div class=\"info-text\">\n        <div class=\"info-text-main\">2. Безналичный расчет при получении</div>\n      </div>\n      <div class=\"info-text\">\n        <div class=\"info-text-main\">3. Оплата банковской картой в интернет-магазине</div>\n      </div>\n    </div>\n  </div>\n</section>\n\n<section class=\"reviews\">\n  <div class=\"container\">\n    <div class=\"reviews-title\">\n      Отзывы о Home decor\n    </div>\n    <div class=\"reviews-carousel\">\n      <owl-carousel-o [options]=\"customOptionsReviews\" #owlCarRev>\n        <ng-template carouselSlide *ngFor=\"let review of reviews\" >\n          <div class=\"review-item\" >\n            <div class=\"review-item-head\">\n              <div class=\"review-item-image\" style=\"background-image: url('assets/images/reviews/{{review.image}}')\"></div>\n              <div class=\"review-item-name\">\n                {{review.name}}\n              </div>\n            </div>\n            <div class=\"review-item-text\">\n              {{review.text}}\n            </div>\n          </div>\n        </ng-template>\n      </owl-carousel-o>\n      <div class=\"reviews-arrows\">\n        <a class=\"move-backward\" (click)=\"owlCarRev.prev()\">\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5551 15C10.4003 15 10.2455 14.9435 10.1233 14.8224L4.81172 9.55746C3.94818 8.70151 3.94818 7.29647 4.81172 6.44052L10.1233 1.17563C10.3596 0.941456 10.7506 0.941456 10.9869 1.17563C11.2231 1.40981 11.2231 1.7974 10.9869 2.03158L5.67526 7.29647C5.28423 7.68407 5.28423 8.31392 5.67526 8.70151L10.9869 13.9664C11.2231 14.2006 11.2231 14.5882 10.9869 14.8224C10.8647 14.9354 10.7099 15 10.5551 15Z\" fill=\"#202B21\" />\n          </svg>\n        </a>\n        <a class=\"move-forward\" (click)=\"owlCarRev.next()\">\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M5.44392 1C5.59871 1 5.75349 1.05652 5.87569 1.17765L11.1873 6.44254C12.0508 7.29849 12.0508 8.70353 11.1873 9.55948L5.87569 14.8244C5.63944 15.0585 5.2484 15.0585 5.01215 14.8244C4.7759 14.5902 4.7759 14.2026 5.01215 13.9684L10.3238 8.70353C10.7148 8.31593 10.7148 7.68608 10.3238 7.29849L5.01215 2.0336C4.7759 1.79942 4.7759 1.41182 5.01215 1.17765C5.13435 1.0646 5.28914 1 5.44392 1Z\" fill=\"#202B21\" />\n          </svg>\n        </a>\n      </div>\n    </div>\n\n  </div>\n</section>\n\n<section class=\"map\">\n  <iframe src=\"https://yandex.ru/map-widget/v1/?um=constructor%3Ad2e14dc889a0db591058e3b2e75be736835192bd9ade01c1c39cb0f5a6f6b5b0&amp;source=constructor\" width=\"100%\" height=\"500\" frameborder=\"0\"></iframe>\n</section>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api: \"http://localhost:3000/api/\",\n  serverStaticPath: \"http://localhost:3000/images/products/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}